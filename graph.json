{
  "graph": {
    "nodes": {
      "repositories": {
        "name": "repositories",
        "type": "lib",
        "data": {
          "root": "libs/repositories",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "options": {
                "project": "libs/repositories/ng-package.json",
                "tsConfig": "libs/repositories/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/repositories/tsconfig.lib.prod.json"
                },
                "development": {}
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "reportsDirectory": "../../coverage/libs/repositories"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^production"]
            }
          },
          "name": "repositories",
          "tags": ["npm:public", "scope:repositories"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@frontend/repositories",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/repositories/src",
          "projectType": "library",
          "prefix": "repositories",
          "implicitDependencies": []
        }
      },
      "air-quality": {
        "name": "air-quality",
        "type": "lib",
        "data": {
          "root": "libs/air-quality",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "options": {
                "project": "libs/air-quality/ng-package.json",
                "tsConfig": "libs/air-quality/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/air-quality/tsconfig.lib.prod.json"
                },
                "development": {}
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "reportsDirectory": "../../coverage/libs/air-quality"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^production"]
            }
          },
          "name": "air-quality",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "air-quality",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/air-quality/src",
          "prefix": "",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "shell-e2e": {
        "name": "shell-e2e",
        "type": "e2e",
        "data": {
          "root": "apps/shell-e2e",
          "projectType": "application",
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/e2e/app.cy.ts", "e2e-ci"]
            }
          },
          "targets": {
            "e2e": {
              "options": {
                "cwd": "apps/shell-e2e",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"customConditions\":null}"
                },
                "command": "cypress run"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["cypress"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/cypress/apps/shell-e2e/videos",
                "{workspaceRoot}/dist/cypress/apps/shell-e2e/screenshots"
              ],
              "metadata": {
                "technologies": ["cypress"],
                "description": "Runs Cypress Tests",
                "help": {
                  "command": "npx cypress run --help",
                  "example": {
                    "args": ["--dev", "--headed"]
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["shell"],
                  "target": "serve"
                }
              ],
              "configurations": {
                "production": {
                  "command": "cypress run --env webServerCommand=\"npx nx run shell:serve-static\""
                }
              },
              "executor": "nx:run-commands",
              "parallelism": true
            },
            "e2e-ci--src/e2e/app.cy.ts": {
              "outputs": [
                "{workspaceRoot}\\dist\\cypress\\apps\\shell-e2e\\videos\\src-e2e-app-cy-ts",
                "{workspaceRoot}\\dist\\cypress\\apps\\shell-e2e\\screenshots\\src-e2e-app-cy-ts"
              ],
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["cypress"]
                }
              ],
              "cache": true,
              "options": {
                "cwd": "apps/shell-e2e",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"customConditions\":null}"
                },
                "command": "cypress run --env webServerCommand=\"npx nx run shell:serve-static\" --spec src/e2e/app.cy.ts --config=\"{\\\"baseUrl\\\":\\\"http://localhost:4200\\\",\\\"e2e\\\":{\\\"videosFolder\\\":\\\"..\\\\\\\\..\\\\\\\\dist\\\\\\\\cypress\\\\\\\\apps\\\\\\\\shell-e2e\\\\\\\\videos\\\\\\\\src-e2e-app-cy-ts\\\",\\\"screenshotsFolder\\\":\\\"..\\\\\\\\..\\\\\\\\dist\\\\\\\\cypress\\\\\\\\apps\\\\\\\\shell-e2e\\\\\\\\screenshots\\\\\\\\src-e2e-app-cy-ts\\\"}}\""
              },
              "metadata": {
                "technologies": ["cypress"],
                "description": "Runs Cypress Tests in src/e2e/app.cy.ts in CI",
                "help": {
                  "command": "npx cypress run --help",
                  "example": {
                    "args": ["--dev", "--headed"]
                  }
                }
              },
              "dependsOn": [
                {
                  "target": "serve-static",
                  "projects": ["shell"]
                }
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["cypress"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/cypress/apps/shell-e2e/videos",
                "{workspaceRoot}/dist/cypress/apps/shell-e2e/screenshots"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/e2e/app.cy.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": ["cypress"],
                "description": "Runs Cypress Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "npx cypress run --help",
                  "example": {
                    "args": ["--dev", "--headed"]
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "open-cypress": {
              "options": {
                "cwd": "apps/shell-e2e",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"customConditions\":null}"
                },
                "command": "cypress open"
              },
              "metadata": {
                "technologies": ["cypress"],
                "description": "Opens Cypress",
                "help": {
                  "command": "npx cypress open --help",
                  "example": {
                    "args": ["--dev", "--e2e"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/shell-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/apps/shell-e2e/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "npx eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shell-e2e",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/shell-e2e/src",
          "tags": [],
          "implicitDependencies": ["shell"]
        }
      },
      "open-api": {
        "name": "open-api",
        "type": "lib",
        "data": {
          "root": "libs/open-api",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "options": {
                "project": "libs/open-api/ng-package.json",
                "tsConfig": "libs/open-api/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/open-api/tsconfig.lib.prod.json"
                },
                "development": {}
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "reportsDirectory": "../../coverage/libs/open-api"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^production"]
            }
          },
          "name": "open-api",
          "tags": ["npm:public"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@frontend/open-api",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/open-api/src",
          "prefix": "lib",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "shared": {
        "name": "shared",
        "type": "lib",
        "data": {
          "root": "libs/shared",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/angular:ng-packagr-lite",
              "outputs": ["{workspaceRoot}/dist/{projectRoot}"],
              "options": {
                "project": "libs/shared/ng-package.json",
                "tsConfig": "libs/shared/tsconfig.lib.json"
              },
              "configurations": {
                "production": {
                  "tsConfig": "libs/shared/tsconfig.lib.prod.json"
                },
                "development": {}
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "reportsDirectory": "../../coverage/libs/shared"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^production"]
            }
          },
          "name": "shared",
          "tags": ["npm:public", "scope:shared"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@frontend/shared",
              "isInPackageManagerWorkspaces": false
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/shared/src",
          "prefix": "shared",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "shell": {
        "name": "shell",
        "type": "app",
        "data": {
          "root": "apps/shell",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": [
                "default",
                "{workspaceRoot}/.eslintrc.json",
                "{workspaceRoot}/.eslintignore",
                "{workspaceRoot}/eslint.config.mjs"
              ]
            },
            "build": {
              "executor": "@angular/build:application",
              "outputs": ["{options.outputPath}"],
              "options": {
                "outputPath": "dist/apps/shell",
                "browser": "apps/shell/src/main.ts",
                "polyfills": ["zone.js"],
                "tsConfig": "apps/shell/tsconfig.app.json",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "apps/shell/public"
                  }
                ],
                "define": {
                  "MY_API_URL": "\"https://api.ignaciokoestner.de\""
                },
                "styles": ["apps/shell/src/styles.css"]
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "500kb",
                      "maximumError": "1mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "4kb",
                      "maximumError": "8kb"
                    }
                  ],
                  "outputHashing": "all"
                },
                "development": {
                  "optimization": false,
                  "extractLicenses": false,
                  "sourceMap": true
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": ["production", "^production"]
            },
            "serve": {
              "continuous": true,
              "executor": "@angular/build:dev-server",
              "configurations": {
                "production": {
                  "buildTarget": "shell:build:production"
                },
                "development": {
                  "buildTarget": "shell:build:development"
                }
              },
              "defaultConfiguration": "development",
              "options": {},
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@angular/build:extract-i18n",
              "options": {
                "buildTarget": "shell:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "reportsDirectory": "../../coverage/apps/shell"
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "inputs": ["default", "^production"]
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "shell:build",
                "port": 4200,
                "staticFilePath": "dist/apps/shell/browser",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "shell",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "prefix": "app",
          "sourceRoot": "apps/shell/src",
          "tags": ["scope:shell"],
          "implicitDependencies": []
        }
      },
      "frontend": {
        "name": "frontend",
        "type": "app",
        "data": {
          "root": ".",
          "metadata": {
            "targetGroups": {
              "Docker": ["docker:build", "docker:run", "nx-release-publish"]
            }
          },
          "targets": {
            "docker:build": {
              "options": {
                "cwd": ".",
                "args": ["--tag ."],
                "command": "docker build ."
              },
              "inputs": ["production", "^production"],
              "metadata": {
                "technologies": ["docker"],
                "description": "Run Docker build",
                "help": {
                  "command": "docker build --help",
                  "example": {
                    "options": {
                      "cache-from": "type=s3,region=eu-west-1,bucket=mybucket .",
                      "cache-to": "type=s3,region=eu-west-1,bucket=mybucket ."
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "docker:run": {
              "dependsOn": ["docker:build"],
              "options": {
                "cwd": ".",
                "command": "docker run {args} ."
              },
              "inputs": ["production", "^production"],
              "metadata": {
                "technologies": ["docker"],
                "description": "Run Docker run",
                "help": {
                  "command": "docker run --help",
                  "example": {
                    "options": {
                      "args": ["-p", "3000:3000"]
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/docker:release-publish",
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "name": "frontend",
          "implicitDependencies": [],
          "tags": []
        }
      }
    },
    "dependencies": {
      "repositories": [
        {
          "source": "repositories",
          "target": "shared",
          "type": "static"
        }
      ],
      "air-quality": [
        {
          "source": "air-quality",
          "target": "open-api",
          "type": "static"
        },
        {
          "source": "air-quality",
          "target": "shared",
          "type": "static"
        }
      ],
      "shell-e2e": [
        {
          "source": "shell-e2e",
          "target": "shell",
          "type": "implicit"
        }
      ],
      "open-api": [],
      "shared": [],
      "shell": [
        {
          "source": "shell",
          "target": "open-api",
          "type": "static"
        },
        {
          "source": "shell",
          "target": "air-quality",
          "type": "static"
        },
        {
          "source": "shell",
          "target": "repositories",
          "type": "static"
        }
      ],
      "frontend": []
    }
  }
}
